\documentclass{article}

\begin{document}

\section*{OSEMN Assignment - Java v/s JavaScript}
\subsection*{Overview}
\textbf{Github} is a web-based Git repository hosting service, which offers all of the distributed revision control and source code management (SCM) functionality of Git as well as adding its own features. Unlike Git, which is strictly a command-line tool, GitHub provides a web-based graphical interface and desktop as well as mobile integration. It also provides access control and several collaboration features such as wikis, task management, and bug tracking and feature requests for every project.
\smallskip
\par GitHub offers both paid plans for private repositories and free accounts, which are usually used to host open-source software projects. As of 2015, GitHub reports having over 9 million users and over 21.1 million repositories, making it the largest code hoster in the world. \smallskip
\par Projects on GitHub can be accessed and manipulated using the standard git command-line interface and all of the standard git commands work with it. GitHub also allows registered and non-registered users to browse public repositories on the site. Multiple desktop clients and git plugins have also been created by GitHub and other third parties which integrate with the platform. \smallskip
\par The site provides social networking-like functions such as feeds, followers, wikis (using wiki software called Gollum) and a social network graph to display how developers work on their versions ("forks") of a repository and which fork (and branch within that fork) is newest. \smallskip
A user must create an account in order to contribute content to the site, but public repositories can be browsed and downloaded by anyone. With a registered user account, users are able to discuss, manage, create repositories, submit contributions to others' repositories, and review changes to code. \smallskip
\par GitHub also operates other services: a pastebin-style site called Gist which is for hosting code snippets (GitHub proper is for hosting larger projects), and a slide hosting service called Speaker Deck. \smallskip
The software that runs GitHub was written using Ruby on Rails and Erlang by GitHub, Inc. developers Chris Wanstrath PJ Hyett, and Tom Preston-Werner. \smallskip
\par GitHub launched a new program to give students free access to their tools on 7 October 2014. It is called the GitHub Student Developer Pack. GitHub will partner with Bitnami,Crowdflower, DigitalOcean, DNSimple, HackHands, Namecheap, Orchestrate, Screenhero, SendGrid, Stripe, Travis CI and Unreal Engine to launch the program. \smallskip
\par GitHub's Terms of Service do not require public software projects hosted on GitHub to meet the Open Source Definition. Therefore (and in any case) it is advisable for users and developers intending to use a piece of software found on GitHub to read the software license in the repository (usually found in a top-level file called "LICENSE", "LICENSE.txt", or similar) to determine if it meets their needs.



\subsection*{Scope}
GitHub is mostly used for code. \smallskip

In addition to source code, GitHub supports the following formats and features:

\begin{itemize}
\item Documentation, including automatically-rendered README files in a variety of Markdown-like file formats (see README files on GitHub)
\item Issue tracking (including feature requests)
\item Wikis
\item Small websites can be hosted from public repositories on GitHub. The URL format is http://projectname.github.io.
\item Small websites can be hosted from public repositories on GitHub. The URL format is http://projectname.github.io.
\item Nested task-lists within files
\item Visualization of geospatial data
\item Gantt charts
\item 3D render files which can be previewed using a new integrated STL file viewer which displays the files on a 3D canvas. The viewer is powered by WebGL and Three.js.
\item Photoshop's native PSD format can be previewed and compared to previous versions of the same file.
\end{itemize}

\smallskip
[Source: http://en.wikipedia.org/wiki/GitHub]

\bigskip

\subsection*{Data}
To gather data from github, I used the Github API ‘https://api.github.com’. Parameters can be passed to this as queries. The following code describes how I derived my data:

<<chunk1, echo=TRUE>>=

library(jsonlite)
library (plyr)
library (ggplot2)

url  <- 'https://api.github.com/'                 # the GitHub API
path <- 'search/repositories'                     # Repositories path
searchJava <- '?q=language:Java'                  # And language = Java
searchJavaScript <- '?q=language:JavaScript'      # Language = JavaScript

URLjava<-paste0(url,path,searchJava)
URLjavascript<-paste0(url,path,searchJavaScript)

data_json_Java<-jsonlite::fromJSON(URLjava)
data_json_Javascript<-jsonlite::fromJSON(URLjavascript)

data_dataframe_Java<-as.data.frame(data_json_Java)
data_dataframe_Javascript<-as.data.frame(data_json_Javascript)

class(data_dataframe_Java)
str(data_dataframe_Java)
summary(data_dataframe_Java)

class(data_dataframe_Javascript)
str(data_dataframe_Javascript)
summary(data_dataframe_Javascript)

@

\subsubsection*{Results}
So, we have tables for repositories created in Java and in JavaScript. Seeing he values in the tables, we can verify the language in which the repository was created. \par
The number of repositories for each, Java and JavaScript can be calculated as follows:

<<chunk2, echo=TRUE>>=

njava<-data_dataframe_Java[1,1]
njavascript<-data_dataframe_Javascript[1,1]

#Creating a table with these values:

language<-c("Java","JavaScript")
repositories<-c(get("njava"),get("njavascript"))

graph<-cbind(language,repositories)
graph_data_frame<-as.data.frame(graph)

graph_data_frame

@


\subsection*{Graphing}

Having a table with language on X-axis and number of repositories for each language on Y-axis, we can easily plot a graph for that table. Once we have that graph, we can easily analyze our results.

<<chunk3,echo=TRUE>>=

library(ggplot2)
ggplot2::ggplot(graph_data_frame,aes(x=language,y=repositories,fill=language))+
        geom_bar(stat="identity")

@

We can clearly see, that the number of repositories created in JavaScript is more than those created in Java.

\end{document}